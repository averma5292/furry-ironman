package SomeFirstPrograms;
// Program to solve the maximum contiguous subsequence sum problem with cubic complexity.
import java.io.*;
public class MaxSum {
	public static void main(String args[])throws IOException{
		int maxSum=0;
		int[] a=new int[5];
		System.out.println("Enter 5 numbers in the array");
		BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
		for(int i=0;i<5;i++){
			 a[i]=Integer.parseInt(in.readLine());
		}
		maxSum=calcSum( a);
		System.out.println("Max Sum:"+maxSum);
	}

	private static int calcSum(int a[]) {
	int maxSum=0;
	int seqStart=0;
	int seqEnd=0;
		for(int i=0;i<a.length;i++){
			for(int j=i;j<a.length;j++){
				int thisSum=0;
				for(int k=i;k<j;k++){
					thisSum=thisSum+a[k];
				}
				if(thisSum>maxSum){
					maxSum=thisSum;
					seqStart=i;
					seqEnd=j;
				}
			}
			
		}
		System.out.println("Start:"+seqStart+"End:"+seqEnd);
		return maxSum;
			}
		
	}
