//Program to solve the maximum contiguous subsequence sum problem with a quadratic complexity.
package SomeFirstPrograms;
import java.io.*;
public class MaxSum1 {
	public static void main(String args[])throws IOException{
		int maxSum=0;
		int a[]=new int[5];
		System.out.println("Enter the five elements of the array.");
		BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
		for(int i=0;i<5;i++){
			a[i]=Integer.parseInt(in.readLine());
		}
		System.out.println("Array you entered is:");
		for(int i=0;i<a.length;i++){
			System.out.println(a[i]);
		}
		maxSum=calSum(a);
		System.out.println("The maximum Sum:"+maxSum);
	}

	private static  int calSum(int[] a) {
		int seqStart=0;
		int seqEnd=0;
		int maxSum=0;
		for(int i=0;i<a.length;i++){
			int thisSum=0;
			for(int j=i;j<a.length;j++){
				thisSum+=a[j];
				if(thisSum>maxSum){
					maxSum=thisSum;
					seqStart=i;
					seqEnd=j;
				}
			}
		}
		System.out.println("The starting index of the sequence:"+seqStart);
		System.out.println("The ending index of the sequence:"+seqEnd);
		
		return maxSum;
	}

}
